apply plugin: 'com.android.library'
if(rootProject.hasProperty("upload.github")){
    apply plugin: 'com.github.dcendents.android-maven'//this
    group='com.github.kellysong'//this
}


android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
       /* release {
            *//**
             * 1.多模块或者组件化混淆，只要app模块开了混淆，子模块无论是否打开混淆都是默认开启的。只是通过上面的方法，子模块可以自定义混淆的规则。
             2.子模块的混淆规则是无法影响app模块的的。所以建议，在子模块里尽量只放和子模块相关的混淆规则，一些公有的混淆方式请放在app或者公有的模块中。
             *//*
            consumerProguardFiles  'proguard-rules.pro'
        }*/

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    /*android官方支持库*/
    /*android官方androidx库*/
    api rootProject.ext.dependencies.appcompat
    api rootProject.ext.dependencies.design
    api rootProject.ext.dependencies.recyclerview
    api rootProject.ext.dependencies.cardview
    api rootProject.ext.dependencies.viewpager
    api rootProject.ext.dependencies.swiperefreshlayout
    api rootProject.ext.dependencies.constraintLayout

    /*Retrofit是一款类型安全的网络框架，基于HTTP协议，服务于Android和java语言,集成了okhttp依赖*/
    //retrofit + okHttp3
    api rootProject.ext.dependencies.retrofit
    api rootProject.ext.dependencies.converterGson
    api rootProject.ext.dependencies.adapterRxjava2

    api rootProject.ext.dependencies.loggingInterceptor
    //rxjava
    api rootProject.ext.dependencies.rxjava
    api rootProject.ext.dependencies.rxandroid

    /*AutoDispose解决RxJava内存泄漏*/
    //1.0.0安卓支持包改成了androidx
    api rootProject.ext.dependencies.autodispose

    /*EventBus是一款本地组件间通信框架*/
    api rootProject.ext.dependencies.eventbus

    /*图片加载*/
    api rootProject.ext.dependencies.glide
    annotationProcessor "com.github.bumptech.glide:compiler:${rootProject.ext.glide}"


    /*控件注解框架*/
    //特别注意要在主工程下添加
    // annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.1'，否则注入无效
    api 'com.jakewharton:butterknife:10.2.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.1'

    /*日志*/
    api 'com.orhanobut:logger:2.1.1'

    /*强大的BaseRecyclerView适配器*/
    api rootProject.ext.dependencies.baseRecyclerViewAdapterHelper
}

apply from: './nexus-push-core.gradle'